// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/passwords_v1.proto

package protos

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ErrorDescription struct {
	Type                 string            `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Category             string            `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	Code                 string            `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	CorrelationId        string            `protobuf:"bytes,4,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	Status               string            `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	Message              string            `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
	Cause                string            `protobuf:"bytes,7,opt,name=cause,proto3" json:"cause,omitempty"`
	StackTrace           string            `protobuf:"bytes,8,opt,name=stack_trace,json=stackTrace,proto3" json:"stack_trace,omitempty"`
	Details              map[string]string `protobuf:"bytes,9,rep,name=details,proto3" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ErrorDescription) Reset()         { *m = ErrorDescription{} }
func (m *ErrorDescription) String() string { return proto.CompactTextString(m) }
func (*ErrorDescription) ProtoMessage()    {}
func (*ErrorDescription) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d0add2c0437bd73, []int{0}
}

func (m *ErrorDescription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ErrorDescription.Unmarshal(m, b)
}
func (m *ErrorDescription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ErrorDescription.Marshal(b, m, deterministic)
}
func (m *ErrorDescription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ErrorDescription.Merge(m, src)
}
func (m *ErrorDescription) XXX_Size() int {
	return xxx_messageInfo_ErrorDescription.Size(m)
}
func (m *ErrorDescription) XXX_DiscardUnknown() {
	xxx_messageInfo_ErrorDescription.DiscardUnknown(m)
}

var xxx_messageInfo_ErrorDescription proto.InternalMessageInfo

func (m *ErrorDescription) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ErrorDescription) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *ErrorDescription) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *ErrorDescription) GetCorrelationId() string {
	if m != nil {
		return m.CorrelationId
	}
	return ""
}

func (m *ErrorDescription) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ErrorDescription) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ErrorDescription) GetCause() string {
	if m != nil {
		return m.Cause
	}
	return ""
}

func (m *ErrorDescription) GetStackTrace() string {
	if m != nil {
		return m.StackTrace
	}
	return ""
}

func (m *ErrorDescription) GetDetails() map[string]string {
	if m != nil {
		return m.Details
	}
	return nil
}

type PagingParams struct {
	Skip                 int64    `protobuf:"varint,1,opt,name=skip,proto3" json:"skip,omitempty"`
	Take                 int32    `protobuf:"varint,2,opt,name=take,proto3" json:"take,omitempty"`
	Total                bool     `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PagingParams) Reset()         { *m = PagingParams{} }
func (m *PagingParams) String() string { return proto.CompactTextString(m) }
func (*PagingParams) ProtoMessage()    {}
func (*PagingParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d0add2c0437bd73, []int{1}
}

func (m *PagingParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PagingParams.Unmarshal(m, b)
}
func (m *PagingParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PagingParams.Marshal(b, m, deterministic)
}
func (m *PagingParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PagingParams.Merge(m, src)
}
func (m *PagingParams) XXX_Size() int {
	return xxx_messageInfo_PagingParams.Size(m)
}
func (m *PagingParams) XXX_DiscardUnknown() {
	xxx_messageInfo_PagingParams.DiscardUnknown(m)
}

var xxx_messageInfo_PagingParams proto.InternalMessageInfo

func (m *PagingParams) GetSkip() int64 {
	if m != nil {
		return m.Skip
	}
	return 0
}

func (m *PagingParams) GetTake() int32 {
	if m != nil {
		return m.Take
	}
	return 0
}

func (m *PagingParams) GetTotal() bool {
	if m != nil {
		return m.Total
	}
	return false
}

type PasswordInfo struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ChangeTime           string   `protobuf:"bytes,3,opt,name=change_time,json=changeTime,proto3" json:"change_time,omitempty"`
	Locked               bool     `protobuf:"varint,4,opt,name=locked,proto3" json:"locked,omitempty"`
	LockTime             string   `protobuf:"bytes,5,opt,name=lock_time,json=lockTime,proto3" json:"lock_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PasswordInfo) Reset()         { *m = PasswordInfo{} }
func (m *PasswordInfo) String() string { return proto.CompactTextString(m) }
func (*PasswordInfo) ProtoMessage()    {}
func (*PasswordInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d0add2c0437bd73, []int{2}
}

func (m *PasswordInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PasswordInfo.Unmarshal(m, b)
}
func (m *PasswordInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PasswordInfo.Marshal(b, m, deterministic)
}
func (m *PasswordInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PasswordInfo.Merge(m, src)
}
func (m *PasswordInfo) XXX_Size() int {
	return xxx_messageInfo_PasswordInfo.Size(m)
}
func (m *PasswordInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PasswordInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PasswordInfo proto.InternalMessageInfo

func (m *PasswordInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PasswordInfo) GetChangeTime() string {
	if m != nil {
		return m.ChangeTime
	}
	return ""
}

func (m *PasswordInfo) GetLocked() bool {
	if m != nil {
		return m.Locked
	}
	return false
}

func (m *PasswordInfo) GetLockTime() string {
	if m != nil {
		return m.LockTime
	}
	return ""
}

// The request message containing the user id request.
type PasswordIdRequest struct {
	CorrelationId        string   `protobuf:"bytes,1,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	UserId               string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PasswordIdRequest) Reset()         { *m = PasswordIdRequest{} }
func (m *PasswordIdRequest) String() string { return proto.CompactTextString(m) }
func (*PasswordIdRequest) ProtoMessage()    {}
func (*PasswordIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d0add2c0437bd73, []int{3}
}

func (m *PasswordIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PasswordIdRequest.Unmarshal(m, b)
}
func (m *PasswordIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PasswordIdRequest.Marshal(b, m, deterministic)
}
func (m *PasswordIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PasswordIdRequest.Merge(m, src)
}
func (m *PasswordIdRequest) XXX_Size() int {
	return xxx_messageInfo_PasswordIdRequest.Size(m)
}
func (m *PasswordIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PasswordIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PasswordIdRequest proto.InternalMessageInfo

func (m *PasswordIdRequest) GetCorrelationId() string {
	if m != nil {
		return m.CorrelationId
	}
	return ""
}

func (m *PasswordIdRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

// The request message containing the password value request.
type PasswordValueRequest struct {
	CorrelationId        string   `protobuf:"bytes,1,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PasswordValueRequest) Reset()         { *m = PasswordValueRequest{} }
func (m *PasswordValueRequest) String() string { return proto.CompactTextString(m) }
func (*PasswordValueRequest) ProtoMessage()    {}
func (*PasswordValueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d0add2c0437bd73, []int{4}
}

func (m *PasswordValueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PasswordValueRequest.Unmarshal(m, b)
}
func (m *PasswordValueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PasswordValueRequest.Marshal(b, m, deterministic)
}
func (m *PasswordValueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PasswordValueRequest.Merge(m, src)
}
func (m *PasswordValueRequest) XXX_Size() int {
	return xxx_messageInfo_PasswordValueRequest.Size(m)
}
func (m *PasswordValueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PasswordValueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PasswordValueRequest proto.InternalMessageInfo

func (m *PasswordValueRequest) GetCorrelationId() string {
	if m != nil {
		return m.CorrelationId
	}
	return ""
}

func (m *PasswordValueRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

// The request message containing the password user id and value request.
type PasswordIdAndValueRequest struct {
	CorrelationId        string   `protobuf:"bytes,1,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	UserId               string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Password             string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PasswordIdAndValueRequest) Reset()         { *m = PasswordIdAndValueRequest{} }
func (m *PasswordIdAndValueRequest) String() string { return proto.CompactTextString(m) }
func (*PasswordIdAndValueRequest) ProtoMessage()    {}
func (*PasswordIdAndValueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d0add2c0437bd73, []int{5}
}

func (m *PasswordIdAndValueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PasswordIdAndValueRequest.Unmarshal(m, b)
}
func (m *PasswordIdAndValueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PasswordIdAndValueRequest.Marshal(b, m, deterministic)
}
func (m *PasswordIdAndValueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PasswordIdAndValueRequest.Merge(m, src)
}
func (m *PasswordIdAndValueRequest) XXX_Size() int {
	return xxx_messageInfo_PasswordIdAndValueRequest.Size(m)
}
func (m *PasswordIdAndValueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PasswordIdAndValueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PasswordIdAndValueRequest proto.InternalMessageInfo

func (m *PasswordIdAndValueRequest) GetCorrelationId() string {
	if m != nil {
		return m.CorrelationId
	}
	return ""
}

func (m *PasswordIdAndValueRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *PasswordIdAndValueRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

// The request message containing the password user id and old/new values request.
type PasswordIdAndValuesRequest struct {
	CorrelationId        string   `protobuf:"bytes,1,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	UserId               string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	OldPassword          string   `protobuf:"bytes,3,opt,name=old_password,json=oldPassword,proto3" json:"old_password,omitempty"`
	NewPassword          string   `protobuf:"bytes,4,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PasswordIdAndValuesRequest) Reset()         { *m = PasswordIdAndValuesRequest{} }
func (m *PasswordIdAndValuesRequest) String() string { return proto.CompactTextString(m) }
func (*PasswordIdAndValuesRequest) ProtoMessage()    {}
func (*PasswordIdAndValuesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d0add2c0437bd73, []int{6}
}

func (m *PasswordIdAndValuesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PasswordIdAndValuesRequest.Unmarshal(m, b)
}
func (m *PasswordIdAndValuesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PasswordIdAndValuesRequest.Marshal(b, m, deterministic)
}
func (m *PasswordIdAndValuesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PasswordIdAndValuesRequest.Merge(m, src)
}
func (m *PasswordIdAndValuesRequest) XXX_Size() int {
	return xxx_messageInfo_PasswordIdAndValuesRequest.Size(m)
}
func (m *PasswordIdAndValuesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PasswordIdAndValuesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PasswordIdAndValuesRequest proto.InternalMessageInfo

func (m *PasswordIdAndValuesRequest) GetCorrelationId() string {
	if m != nil {
		return m.CorrelationId
	}
	return ""
}

func (m *PasswordIdAndValuesRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *PasswordIdAndValuesRequest) GetOldPassword() string {
	if m != nil {
		return m.OldPassword
	}
	return ""
}

func (m *PasswordIdAndValuesRequest) GetNewPassword() string {
	if m != nil {
		return m.NewPassword
	}
	return ""
}

// The request message containing the password user id and code request.
type PasswordIdAndCodeRequest struct {
	CorrelationId        string   `protobuf:"bytes,1,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	UserId               string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Code                 string   `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PasswordIdAndCodeRequest) Reset()         { *m = PasswordIdAndCodeRequest{} }
func (m *PasswordIdAndCodeRequest) String() string { return proto.CompactTextString(m) }
func (*PasswordIdAndCodeRequest) ProtoMessage()    {}
func (*PasswordIdAndCodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d0add2c0437bd73, []int{7}
}

func (m *PasswordIdAndCodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PasswordIdAndCodeRequest.Unmarshal(m, b)
}
func (m *PasswordIdAndCodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PasswordIdAndCodeRequest.Marshal(b, m, deterministic)
}
func (m *PasswordIdAndCodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PasswordIdAndCodeRequest.Merge(m, src)
}
func (m *PasswordIdAndCodeRequest) XXX_Size() int {
	return xxx_messageInfo_PasswordIdAndCodeRequest.Size(m)
}
func (m *PasswordIdAndCodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PasswordIdAndCodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PasswordIdAndCodeRequest proto.InternalMessageInfo

func (m *PasswordIdAndCodeRequest) GetCorrelationId() string {
	if m != nil {
		return m.CorrelationId
	}
	return ""
}

func (m *PasswordIdAndCodeRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *PasswordIdAndCodeRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

// The request message containing the password user id, code and value request.
type PasswordIdAndCodeAndValueRequest struct {
	CorrelationId        string   `protobuf:"bytes,1,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	UserId               string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Code                 string   `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Password             string   `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PasswordIdAndCodeAndValueRequest) Reset()         { *m = PasswordIdAndCodeAndValueRequest{} }
func (m *PasswordIdAndCodeAndValueRequest) String() string { return proto.CompactTextString(m) }
func (*PasswordIdAndCodeAndValueRequest) ProtoMessage()    {}
func (*PasswordIdAndCodeAndValueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d0add2c0437bd73, []int{8}
}

func (m *PasswordIdAndCodeAndValueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PasswordIdAndCodeAndValueRequest.Unmarshal(m, b)
}
func (m *PasswordIdAndCodeAndValueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PasswordIdAndCodeAndValueRequest.Marshal(b, m, deterministic)
}
func (m *PasswordIdAndCodeAndValueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PasswordIdAndCodeAndValueRequest.Merge(m, src)
}
func (m *PasswordIdAndCodeAndValueRequest) XXX_Size() int {
	return xxx_messageInfo_PasswordIdAndCodeAndValueRequest.Size(m)
}
func (m *PasswordIdAndCodeAndValueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PasswordIdAndCodeAndValueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PasswordIdAndCodeAndValueRequest proto.InternalMessageInfo

func (m *PasswordIdAndCodeAndValueRequest) GetCorrelationId() string {
	if m != nil {
		return m.CorrelationId
	}
	return ""
}

func (m *PasswordIdAndCodeAndValueRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *PasswordIdAndCodeAndValueRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *PasswordIdAndCodeAndValueRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

// The response message containing the password info response
type PasswordInfoReply struct {
	Error                *ErrorDescription `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Info                 *PasswordInfo     `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PasswordInfoReply) Reset()         { *m = PasswordInfoReply{} }
func (m *PasswordInfoReply) String() string { return proto.CompactTextString(m) }
func (*PasswordInfoReply) ProtoMessage()    {}
func (*PasswordInfoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d0add2c0437bd73, []int{9}
}

func (m *PasswordInfoReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PasswordInfoReply.Unmarshal(m, b)
}
func (m *PasswordInfoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PasswordInfoReply.Marshal(b, m, deterministic)
}
func (m *PasswordInfoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PasswordInfoReply.Merge(m, src)
}
func (m *PasswordInfoReply) XXX_Size() int {
	return xxx_messageInfo_PasswordInfoReply.Size(m)
}
func (m *PasswordInfoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PasswordInfoReply.DiscardUnknown(m)
}

var xxx_messageInfo_PasswordInfoReply proto.InternalMessageInfo

func (m *PasswordInfoReply) GetError() *ErrorDescription {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *PasswordInfoReply) GetInfo() *PasswordInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

// The response message containing the password empty response
type PasswordEmptyReply struct {
	Error                *ErrorDescription `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PasswordEmptyReply) Reset()         { *m = PasswordEmptyReply{} }
func (m *PasswordEmptyReply) String() string { return proto.CompactTextString(m) }
func (*PasswordEmptyReply) ProtoMessage()    {}
func (*PasswordEmptyReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d0add2c0437bd73, []int{10}
}

func (m *PasswordEmptyReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PasswordEmptyReply.Unmarshal(m, b)
}
func (m *PasswordEmptyReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PasswordEmptyReply.Marshal(b, m, deterministic)
}
func (m *PasswordEmptyReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PasswordEmptyReply.Merge(m, src)
}
func (m *PasswordEmptyReply) XXX_Size() int {
	return xxx_messageInfo_PasswordEmptyReply.Size(m)
}
func (m *PasswordEmptyReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PasswordEmptyReply.DiscardUnknown(m)
}

var xxx_messageInfo_PasswordEmptyReply proto.InternalMessageInfo

func (m *PasswordEmptyReply) GetError() *ErrorDescription {
	if m != nil {
		return m.Error
	}
	return nil
}

// The response message containing the password value response
type PasswordValueReply struct {
	Error                *ErrorDescription `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Password             string            `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PasswordValueReply) Reset()         { *m = PasswordValueReply{} }
func (m *PasswordValueReply) String() string { return proto.CompactTextString(m) }
func (*PasswordValueReply) ProtoMessage()    {}
func (*PasswordValueReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d0add2c0437bd73, []int{11}
}

func (m *PasswordValueReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PasswordValueReply.Unmarshal(m, b)
}
func (m *PasswordValueReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PasswordValueReply.Marshal(b, m, deterministic)
}
func (m *PasswordValueReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PasswordValueReply.Merge(m, src)
}
func (m *PasswordValueReply) XXX_Size() int {
	return xxx_messageInfo_PasswordValueReply.Size(m)
}
func (m *PasswordValueReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PasswordValueReply.DiscardUnknown(m)
}

var xxx_messageInfo_PasswordValueReply proto.InternalMessageInfo

func (m *PasswordValueReply) GetError() *ErrorDescription {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *PasswordValueReply) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

// The response message containing the password authenticated response
type PasswordAuthenticateReply struct {
	Error                *ErrorDescription `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Authenticated        bool              `protobuf:"varint,2,opt,name=authenticated,proto3" json:"authenticated,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PasswordAuthenticateReply) Reset()         { *m = PasswordAuthenticateReply{} }
func (m *PasswordAuthenticateReply) String() string { return proto.CompactTextString(m) }
func (*PasswordAuthenticateReply) ProtoMessage()    {}
func (*PasswordAuthenticateReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d0add2c0437bd73, []int{12}
}

func (m *PasswordAuthenticateReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PasswordAuthenticateReply.Unmarshal(m, b)
}
func (m *PasswordAuthenticateReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PasswordAuthenticateReply.Marshal(b, m, deterministic)
}
func (m *PasswordAuthenticateReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PasswordAuthenticateReply.Merge(m, src)
}
func (m *PasswordAuthenticateReply) XXX_Size() int {
	return xxx_messageInfo_PasswordAuthenticateReply.Size(m)
}
func (m *PasswordAuthenticateReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PasswordAuthenticateReply.DiscardUnknown(m)
}

var xxx_messageInfo_PasswordAuthenticateReply proto.InternalMessageInfo

func (m *PasswordAuthenticateReply) GetError() *ErrorDescription {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *PasswordAuthenticateReply) GetAuthenticated() bool {
	if m != nil {
		return m.Authenticated
	}
	return false
}

// The response message containing the password valid response
type PasswordValidReply struct {
	Error                *ErrorDescription `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Valid                bool              `protobuf:"varint,2,opt,name=valid,proto3" json:"valid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PasswordValidReply) Reset()         { *m = PasswordValidReply{} }
func (m *PasswordValidReply) String() string { return proto.CompactTextString(m) }
func (*PasswordValidReply) ProtoMessage()    {}
func (*PasswordValidReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d0add2c0437bd73, []int{13}
}

func (m *PasswordValidReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PasswordValidReply.Unmarshal(m, b)
}
func (m *PasswordValidReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PasswordValidReply.Marshal(b, m, deterministic)
}
func (m *PasswordValidReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PasswordValidReply.Merge(m, src)
}
func (m *PasswordValidReply) XXX_Size() int {
	return xxx_messageInfo_PasswordValidReply.Size(m)
}
func (m *PasswordValidReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PasswordValidReply.DiscardUnknown(m)
}

var xxx_messageInfo_PasswordValidReply proto.InternalMessageInfo

func (m *PasswordValidReply) GetError() *ErrorDescription {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *PasswordValidReply) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

func init() {
	proto.RegisterType((*ErrorDescription)(nil), "passwords_v1.ErrorDescription")
	proto.RegisterMapType((map[string]string)(nil), "passwords_v1.ErrorDescription.DetailsEntry")
	proto.RegisterType((*PagingParams)(nil), "passwords_v1.PagingParams")
	proto.RegisterType((*PasswordInfo)(nil), "passwords_v1.PasswordInfo")
	proto.RegisterType((*PasswordIdRequest)(nil), "passwords_v1.PasswordIdRequest")
	proto.RegisterType((*PasswordValueRequest)(nil), "passwords_v1.PasswordValueRequest")
	proto.RegisterType((*PasswordIdAndValueRequest)(nil), "passwords_v1.PasswordIdAndValueRequest")
	proto.RegisterType((*PasswordIdAndValuesRequest)(nil), "passwords_v1.PasswordIdAndValuesRequest")
	proto.RegisterType((*PasswordIdAndCodeRequest)(nil), "passwords_v1.PasswordIdAndCodeRequest")
	proto.RegisterType((*PasswordIdAndCodeAndValueRequest)(nil), "passwords_v1.PasswordIdAndCodeAndValueRequest")
	proto.RegisterType((*PasswordInfoReply)(nil), "passwords_v1.PasswordInfoReply")
	proto.RegisterType((*PasswordEmptyReply)(nil), "passwords_v1.PasswordEmptyReply")
	proto.RegisterType((*PasswordValueReply)(nil), "passwords_v1.PasswordValueReply")
	proto.RegisterType((*PasswordAuthenticateReply)(nil), "passwords_v1.PasswordAuthenticateReply")
	proto.RegisterType((*PasswordValidReply)(nil), "passwords_v1.PasswordValidReply")
}

func init() { proto.RegisterFile("protos/passwords_v1.proto", fileDescriptor_5d0add2c0437bd73) }

var fileDescriptor_5d0add2c0437bd73 = []byte{
	// 857 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0x5d, 0x6e, 0xe3, 0x36,
	0x10, 0x8e, 0xed, 0x24, 0x76, 0xc6, 0x4e, 0xd6, 0x21, 0x16, 0xad, 0xd6, 0x05, 0x1a, 0x57, 0xe8,
	0xb6, 0x01, 0x8a, 0xba, 0x48, 0xda, 0x87, 0x62, 0xdf, 0xb2, 0x9b, 0x3c, 0xa4, 0x68, 0x51, 0x43,
	0x59, 0x38, 0xfd, 0x79, 0x50, 0xb9, 0xd2, 0xc4, 0x4b, 0x58, 0x16, 0x55, 0x92, 0xb6, 0xe1, 0x6b,
	0xf4, 0x08, 0x7b, 0x83, 0x1e, 0xab, 0xb7, 0x28, 0x48, 0x4a, 0xb6, 0xe4, 0xd8, 0x4e, 0xd6, 0xf1,
	0x1b, 0x67, 0x38, 0xfc, 0xbe, 0xe1, 0x37, 0xc3, 0x91, 0xe0, 0x45, 0x22, 0xb8, 0xe2, 0xf2, 0xbb,
	0x84, 0x4a, 0x39, 0xe1, 0x22, 0x94, 0xfe, 0xf8, 0xac, 0x63, 0x7c, 0xa4, 0x91, 0xf7, 0xb9, 0xff,
	0x95, 0xa1, 0x79, 0x25, 0x04, 0x17, 0x97, 0x28, 0x03, 0xc1, 0x12, 0xc5, 0x78, 0x4c, 0x08, 0xec,
	0xaa, 0x69, 0x82, 0x4e, 0xa9, 0x5d, 0x3a, 0x3d, 0xf0, 0xcc, 0x9a, 0xb4, 0xa0, 0x16, 0x50, 0x85,
	0x7d, 0x2e, 0xa6, 0x4e, 0xd9, 0xf8, 0x67, 0xb6, 0x8e, 0x0f, 0x78, 0x88, 0x4e, 0xc5, 0xc6, 0xeb,
	0x35, 0x79, 0x09, 0x47, 0x01, 0x17, 0x02, 0x23, 0xaa, 0x21, 0x7d, 0x16, 0x3a, 0xbb, 0x66, 0xf7,
	0x30, 0xe7, 0xbd, 0x0e, 0xc9, 0x27, 0xb0, 0x2f, 0x15, 0x55, 0x23, 0xe9, 0xec, 0x99, 0xed, 0xd4,
	0x22, 0x0e, 0x54, 0x87, 0x28, 0x25, 0xed, 0xa3, 0xb3, 0x6f, 0x36, 0x32, 0x93, 0x3c, 0x87, 0xbd,
	0x80, 0x8e, 0x24, 0x3a, 0x55, 0xe3, 0xb7, 0x06, 0x39, 0x81, 0xba, 0x54, 0x34, 0x18, 0xf8, 0x4a,
	0xd0, 0x00, 0x9d, 0x9a, 0xd9, 0x03, 0xe3, 0x7a, 0xab, 0x3d, 0xe4, 0x0a, 0xaa, 0x21, 0x2a, 0xca,
	0x22, 0xe9, 0x1c, 0xb4, 0x2b, 0xa7, 0xf5, 0xf3, 0x6f, 0x3a, 0x05, 0x71, 0x16, 0x45, 0xe8, 0x5c,
	0xda, 0xe8, 0xab, 0x58, 0x89, 0xa9, 0x97, 0x9d, 0x6d, 0xbd, 0x82, 0x46, 0x7e, 0x83, 0x34, 0xa1,
	0x32, 0xc0, 0x69, 0xaa, 0x94, 0x5e, 0xea, 0xfc, 0xc6, 0x34, 0x1a, 0x61, 0xaa, 0x92, 0x35, 0x5e,
	0x95, 0x7f, 0x2c, 0xb9, 0x3f, 0x43, 0xa3, 0x4b, 0xfb, 0x2c, 0xee, 0x77, 0xa9, 0xa0, 0x43, 0xa9,
	0x65, 0x93, 0x03, 0x96, 0x98, 0xc3, 0x15, 0xcf, 0xac, 0x8d, 0xf4, 0x74, 0x60, 0x0f, 0xef, 0x79,
	0x66, 0xad, 0x11, 0x15, 0x57, 0x34, 0x32, 0xfa, 0xd6, 0x3c, 0x6b, 0xb8, 0x4a, 0xa3, 0xd9, 0x0b,
	0x5c, 0xc7, 0x77, 0x9c, 0x1c, 0x41, 0x99, 0x85, 0x69, 0x22, 0x65, 0x16, 0x6a, 0x45, 0x82, 0xf7,
	0x34, 0xee, 0xa3, 0xaf, 0xd8, 0x30, 0xab, 0x0d, 0x58, 0xd7, 0x5b, 0x36, 0x44, 0x2d, 0x7d, 0xc4,
	0x83, 0x01, 0xda, 0xca, 0xd4, 0xbc, 0xd4, 0x22, 0x9f, 0xc1, 0x81, 0x5e, 0xd9, 0x63, 0xb6, 0x2a,
	0x35, 0xed, 0xd0, 0x87, 0xdc, 0x1b, 0x38, 0x9e, 0xb1, 0x86, 0x1e, 0xfe, 0x3d, 0x42, 0xa9, 0x96,
	0xd4, 0xba, 0xb4, 0xac, 0xd6, 0x9f, 0x42, 0x75, 0x24, 0x51, 0xe8, 0x7d, 0xab, 0xcd, 0xbe, 0x36,
	0xaf, 0x43, 0xf7, 0x77, 0x78, 0x9e, 0x81, 0xf6, 0xb4, 0x5a, 0x1f, 0x89, 0xdb, 0x82, 0x5a, 0x56,
	0xca, 0xac, 0x35, 0x33, 0xdb, 0x9d, 0xc0, 0x8b, 0x79, 0xbe, 0x17, 0xf1, 0x46, 0xf8, 0xab, 0xf2,
	0x2e, 0x10, 0x57, 0x16, 0x88, 0x3f, 0x94, 0xa0, 0x75, 0x9f, 0x59, 0x6e, 0x8b, 0xfa, 0x0b, 0x68,
	0xf0, 0x28, 0xf4, 0x17, 0xe8, 0xeb, 0x3c, 0x0a, 0x33, 0x52, 0x1d, 0x12, 0xe3, 0x64, 0x1e, 0x62,
	0xdf, 0x5f, 0x3d, 0xc6, 0x49, 0x16, 0xe2, 0xc6, 0xe0, 0x14, 0x72, 0x7c, 0xc3, 0xc3, 0xad, 0x89,
	0xb3, 0x64, 0x28, 0xb8, 0xff, 0x94, 0xa0, 0x7d, 0x8f, 0x70, 0xdb, 0x55, 0x59, 0x36, 0x8d, 0xf2,
	0x95, 0xda, 0x5d, 0xa8, 0xd4, 0x34, 0xd7, 0xd2, 0xf1, 0x1d, 0xf7, 0x30, 0x89, 0xa6, 0xe4, 0x07,
	0xd8, 0x43, 0x3d, 0x11, 0x0c, 0x77, 0xfd, 0xfc, 0xf3, 0xf5, 0xc3, 0xc2, 0xb3, 0xc1, 0xa4, 0x03,
	0xbb, 0x2c, 0xbe, 0xe3, 0x26, 0xa1, 0xfa, 0x79, 0xab, 0x78, 0xa8, 0x40, 0x62, 0xe2, 0xdc, 0x9f,
	0x80, 0x64, 0xde, 0xab, 0x61, 0xa2, 0xa6, 0x4f, 0xe0, 0x76, 0xef, 0xe6, 0x58, 0xa9, 0x9c, 0x9b,
	0xdf, 0xe3, 0x91, 0x2f, 0xea, 0x62, 0xa4, 0xde, 0x63, 0xac, 0x98, 0xfe, 0x10, 0x3c, 0x85, 0xee,
	0x4b, 0x38, 0xa4, 0x39, 0x28, 0xcb, 0x59, 0xf3, 0x8a, 0x4e, 0xf7, 0xaf, 0xc2, 0x05, 0x59, 0xf8,
	0x14, 0x46, 0x3b, 0xa4, 0x59, 0xc6, 0x64, 0x8d, 0xf3, 0x7f, 0xab, 0x70, 0x90, 0x51, 0x48, 0x72,
	0x0b, 0xc7, 0x7d, 0x54, 0xb3, 0xf7, 0xe3, 0xeb, 0x8a, 0x91, 0x93, 0x15, 0x35, 0xcd, 0x66, 0x61,
	0xeb, 0x64, 0x4d, 0xd1, 0x75, 0xc2, 0xee, 0x0e, 0xf9, 0x13, 0x8e, 0x0d, 0x1f, 0x55, 0x38, 0x43,
	0x27, 0xee, 0xf2, 0x73, 0xf9, 0x97, 0xd1, 0x6a, 0x2f, 0x8f, 0x99, 0xb7, 0x8e, 0x01, 0x6f, 0xc8,
	0x5c, 0xd6, 0xe4, 0xeb, 0x55, 0x09, 0x2f, 0x3c, 0xbb, 0x47, 0x81, 0xff, 0x06, 0xc7, 0x1a, 0x5c,
	0xe1, 0x30, 0x99, 0x33, 0x3c, 0x28, 0x49, 0x7b, 0xed, 0xd5, 0x2c, 0x72, 0x0f, 0x9e, 0x85, 0x18,
	0x61, 0x5e, 0x91, 0x4d, 0x71, 0x0b, 0x19, 0xbf, 0x83, 0x46, 0xbe, 0x8b, 0x1e, 0x2f, 0xc7, 0x8a,
	0xc0, 0x7b, 0x2d, 0xef, 0xee, 0x10, 0x1f, 0x9e, 0xa5, 0x5f, 0xda, 0x59, 0xee, 0xa7, 0x0f, 0xd1,
	0xc8, 0x8f, 0xab, 0xe9, 0xe1, 0xac, 0x61, 0xcc, 0x38, 0xfb, 0x6a, 0x0d, 0x7c, 0x6e, 0x86, 0xaf,
	0x51, 0x3e, 0x7d, 0x3e, 0xee, 0x0e, 0x09, 0xe1, 0x48, 0x60, 0xa1, 0x65, 0x3a, 0x0f, 0xa0, 0x6f,
	0xd2, 0x39, 0xb7, 0xd0, 0x14, 0x18, 0xf0, 0x31, 0x8a, 0xed, 0x16, 0xf8, 0x75, 0x0f, 0x5e, 0x26,
	0x2c, 0xf9, 0x56, 0xa2, 0x18, 0xb3, 0x00, 0x65, 0x47, 0x7f, 0x04, 0xe4, 0xfc, 0x5c, 0x67, 0x8c,
	0x42, 0x32, 0x1e, 0x9f, 0xbd, 0x6e, 0xce, 0x5e, 0x76, 0x57, 0xff, 0x07, 0xf7, 0xce, 0xba, 0xa5,
	0x3f, 0xf6, 0xed, 0x6f, 0xf2, 0x87, 0x72, 0xb3, 0x7b, 0x71, 0x73, 0x73, 0xfb, 0xab, 0x77, 0x79,
	0xe3, 0xbf, 0xf9, 0xe5, 0xd2, 0xef, 0x9d, 0xbd, 0xb3, 0x5b, 0xdf, 0xff, 0x1f, 0x00, 0x00, 0xff,
	0xff, 0x0a, 0x37, 0x0d, 0x42, 0x4a, 0x0b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PasswordsClient is the client API for Passwords service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PasswordsClient interface {
	GetPasswordInfo(ctx context.Context, in *PasswordIdRequest, opts ...grpc.CallOption) (*PasswordInfoReply, error)
	ValidatePassword(ctx context.Context, in *PasswordValueRequest, opts ...grpc.CallOption) (*PasswordEmptyReply, error)
	SetPassword(ctx context.Context, in *PasswordIdAndValueRequest, opts ...grpc.CallOption) (*PasswordEmptyReply, error)
	SetTempPassword(ctx context.Context, in *PasswordIdRequest, opts ...grpc.CallOption) (*PasswordValueReply, error)
	DeletePassword(ctx context.Context, in *PasswordIdRequest, opts ...grpc.CallOption) (*PasswordEmptyReply, error)
	Authenticate(ctx context.Context, in *PasswordIdAndValueRequest, opts ...grpc.CallOption) (*PasswordAuthenticateReply, error)
	ChangePassword(ctx context.Context, in *PasswordIdAndValuesRequest, opts ...grpc.CallOption) (*PasswordEmptyReply, error)
	ValidateCode(ctx context.Context, in *PasswordIdAndCodeRequest, opts ...grpc.CallOption) (*PasswordValidReply, error)
	ResetPassword(ctx context.Context, in *PasswordIdAndCodeAndValueRequest, opts ...grpc.CallOption) (*PasswordEmptyReply, error)
	RecoverPassword(ctx context.Context, in *PasswordIdRequest, opts ...grpc.CallOption) (*PasswordEmptyReply, error)
}

type passwordsClient struct {
	cc *grpc.ClientConn
}

func NewPasswordsClient(cc *grpc.ClientConn) PasswordsClient {
	return &passwordsClient{cc}
}

func (c *passwordsClient) GetPasswordInfo(ctx context.Context, in *PasswordIdRequest, opts ...grpc.CallOption) (*PasswordInfoReply, error) {
	out := new(PasswordInfoReply)
	err := c.cc.Invoke(ctx, "/passwords_v1.Passwords/get_password_info", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *passwordsClient) ValidatePassword(ctx context.Context, in *PasswordValueRequest, opts ...grpc.CallOption) (*PasswordEmptyReply, error) {
	out := new(PasswordEmptyReply)
	err := c.cc.Invoke(ctx, "/passwords_v1.Passwords/validate_password", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *passwordsClient) SetPassword(ctx context.Context, in *PasswordIdAndValueRequest, opts ...grpc.CallOption) (*PasswordEmptyReply, error) {
	out := new(PasswordEmptyReply)
	err := c.cc.Invoke(ctx, "/passwords_v1.Passwords/set_password", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *passwordsClient) SetTempPassword(ctx context.Context, in *PasswordIdRequest, opts ...grpc.CallOption) (*PasswordValueReply, error) {
	out := new(PasswordValueReply)
	err := c.cc.Invoke(ctx, "/passwords_v1.Passwords/set_temp_password", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *passwordsClient) DeletePassword(ctx context.Context, in *PasswordIdRequest, opts ...grpc.CallOption) (*PasswordEmptyReply, error) {
	out := new(PasswordEmptyReply)
	err := c.cc.Invoke(ctx, "/passwords_v1.Passwords/delete_password", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *passwordsClient) Authenticate(ctx context.Context, in *PasswordIdAndValueRequest, opts ...grpc.CallOption) (*PasswordAuthenticateReply, error) {
	out := new(PasswordAuthenticateReply)
	err := c.cc.Invoke(ctx, "/passwords_v1.Passwords/authenticate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *passwordsClient) ChangePassword(ctx context.Context, in *PasswordIdAndValuesRequest, opts ...grpc.CallOption) (*PasswordEmptyReply, error) {
	out := new(PasswordEmptyReply)
	err := c.cc.Invoke(ctx, "/passwords_v1.Passwords/change_password", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *passwordsClient) ValidateCode(ctx context.Context, in *PasswordIdAndCodeRequest, opts ...grpc.CallOption) (*PasswordValidReply, error) {
	out := new(PasswordValidReply)
	err := c.cc.Invoke(ctx, "/passwords_v1.Passwords/validate_code", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *passwordsClient) ResetPassword(ctx context.Context, in *PasswordIdAndCodeAndValueRequest, opts ...grpc.CallOption) (*PasswordEmptyReply, error) {
	out := new(PasswordEmptyReply)
	err := c.cc.Invoke(ctx, "/passwords_v1.Passwords/reset_password", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *passwordsClient) RecoverPassword(ctx context.Context, in *PasswordIdRequest, opts ...grpc.CallOption) (*PasswordEmptyReply, error) {
	out := new(PasswordEmptyReply)
	err := c.cc.Invoke(ctx, "/passwords_v1.Passwords/recover_password", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PasswordsServer is the server API for Passwords service.
type PasswordsServer interface {
	GetPasswordInfo(context.Context, *PasswordIdRequest) (*PasswordInfoReply, error)
	ValidatePassword(context.Context, *PasswordValueRequest) (*PasswordEmptyReply, error)
	SetPassword(context.Context, *PasswordIdAndValueRequest) (*PasswordEmptyReply, error)
	SetTempPassword(context.Context, *PasswordIdRequest) (*PasswordValueReply, error)
	DeletePassword(context.Context, *PasswordIdRequest) (*PasswordEmptyReply, error)
	Authenticate(context.Context, *PasswordIdAndValueRequest) (*PasswordAuthenticateReply, error)
	ChangePassword(context.Context, *PasswordIdAndValuesRequest) (*PasswordEmptyReply, error)
	ValidateCode(context.Context, *PasswordIdAndCodeRequest) (*PasswordValidReply, error)
	ResetPassword(context.Context, *PasswordIdAndCodeAndValueRequest) (*PasswordEmptyReply, error)
	RecoverPassword(context.Context, *PasswordIdRequest) (*PasswordEmptyReply, error)
}

// UnimplementedPasswordsServer can be embedded to have forward compatible implementations.
type UnimplementedPasswordsServer struct {
}

func (*UnimplementedPasswordsServer) GetPasswordInfo(ctx context.Context, req *PasswordIdRequest) (*PasswordInfoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPasswordInfo not implemented")
}
func (*UnimplementedPasswordsServer) ValidatePassword(ctx context.Context, req *PasswordValueRequest) (*PasswordEmptyReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidatePassword not implemented")
}
func (*UnimplementedPasswordsServer) SetPassword(ctx context.Context, req *PasswordIdAndValueRequest) (*PasswordEmptyReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetPassword not implemented")
}
func (*UnimplementedPasswordsServer) SetTempPassword(ctx context.Context, req *PasswordIdRequest) (*PasswordValueReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetTempPassword not implemented")
}
func (*UnimplementedPasswordsServer) DeletePassword(ctx context.Context, req *PasswordIdRequest) (*PasswordEmptyReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePassword not implemented")
}
func (*UnimplementedPasswordsServer) Authenticate(ctx context.Context, req *PasswordIdAndValueRequest) (*PasswordAuthenticateReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Authenticate not implemented")
}
func (*UnimplementedPasswordsServer) ChangePassword(ctx context.Context, req *PasswordIdAndValuesRequest) (*PasswordEmptyReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangePassword not implemented")
}
func (*UnimplementedPasswordsServer) ValidateCode(ctx context.Context, req *PasswordIdAndCodeRequest) (*PasswordValidReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateCode not implemented")
}
func (*UnimplementedPasswordsServer) ResetPassword(ctx context.Context, req *PasswordIdAndCodeAndValueRequest) (*PasswordEmptyReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResetPassword not implemented")
}
func (*UnimplementedPasswordsServer) RecoverPassword(ctx context.Context, req *PasswordIdRequest) (*PasswordEmptyReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RecoverPassword not implemented")
}

func RegisterPasswordsServer(s *grpc.Server, srv PasswordsServer) {
	s.RegisterService(&_Passwords_serviceDesc, srv)
}

func _Passwords_GetPasswordInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PasswordIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PasswordsServer).GetPasswordInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/passwords_v1.Passwords/GetPasswordInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PasswordsServer).GetPasswordInfo(ctx, req.(*PasswordIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Passwords_ValidatePassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PasswordValueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PasswordsServer).ValidatePassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/passwords_v1.Passwords/ValidatePassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PasswordsServer).ValidatePassword(ctx, req.(*PasswordValueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Passwords_SetPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PasswordIdAndValueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PasswordsServer).SetPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/passwords_v1.Passwords/SetPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PasswordsServer).SetPassword(ctx, req.(*PasswordIdAndValueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Passwords_SetTempPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PasswordIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PasswordsServer).SetTempPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/passwords_v1.Passwords/SetTempPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PasswordsServer).SetTempPassword(ctx, req.(*PasswordIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Passwords_DeletePassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PasswordIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PasswordsServer).DeletePassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/passwords_v1.Passwords/DeletePassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PasswordsServer).DeletePassword(ctx, req.(*PasswordIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Passwords_Authenticate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PasswordIdAndValueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PasswordsServer).Authenticate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/passwords_v1.Passwords/Authenticate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PasswordsServer).Authenticate(ctx, req.(*PasswordIdAndValueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Passwords_ChangePassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PasswordIdAndValuesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PasswordsServer).ChangePassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/passwords_v1.Passwords/ChangePassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PasswordsServer).ChangePassword(ctx, req.(*PasswordIdAndValuesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Passwords_ValidateCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PasswordIdAndCodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PasswordsServer).ValidateCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/passwords_v1.Passwords/ValidateCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PasswordsServer).ValidateCode(ctx, req.(*PasswordIdAndCodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Passwords_ResetPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PasswordIdAndCodeAndValueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PasswordsServer).ResetPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/passwords_v1.Passwords/ResetPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PasswordsServer).ResetPassword(ctx, req.(*PasswordIdAndCodeAndValueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Passwords_RecoverPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PasswordIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PasswordsServer).RecoverPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/passwords_v1.Passwords/RecoverPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PasswordsServer).RecoverPassword(ctx, req.(*PasswordIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Passwords_serviceDesc = grpc.ServiceDesc{
	ServiceName: "passwords_v1.Passwords",
	HandlerType: (*PasswordsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "get_password_info",
			Handler:    _Passwords_GetPasswordInfo_Handler,
		},
		{
			MethodName: "validate_password",
			Handler:    _Passwords_ValidatePassword_Handler,
		},
		{
			MethodName: "set_password",
			Handler:    _Passwords_SetPassword_Handler,
		},
		{
			MethodName: "set_temp_password",
			Handler:    _Passwords_SetTempPassword_Handler,
		},
		{
			MethodName: "delete_password",
			Handler:    _Passwords_DeletePassword_Handler,
		},
		{
			MethodName: "authenticate",
			Handler:    _Passwords_Authenticate_Handler,
		},
		{
			MethodName: "change_password",
			Handler:    _Passwords_ChangePassword_Handler,
		},
		{
			MethodName: "validate_code",
			Handler:    _Passwords_ValidateCode_Handler,
		},
		{
			MethodName: "reset_password",
			Handler:    _Passwords_ResetPassword_Handler,
		},
		{
			MethodName: "recover_password",
			Handler:    _Passwords_RecoverPassword_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/passwords_v1.proto",
}
